import os.path

filename = 'student.txt'

def main():
    while True:
        menm()
        choice = int(input('请选择'))
        if choice in [0,1,2,3,4,5,6,7]:
            if choice == 0:
                answer = input('您确定要退出系统吗？y/n')
                if answer =='y' or answer == 'Y':
                    print('谢谢使用')
                    break
                else:
                    continue
            elif choice ==1:
                insert()#录入学生信息
            elif choice ==2:
                search()#查询学生信息
            elif choice ==3:
                delete()#删除学生信息
            elif choice ==4:
                modify()#修改学生信息
            elif choice ==5:
                sort()#排序
            elif choice ==6:
                total()#统计学生总人数
            elif choice ==7:
                show()#显示所有学生信息

def insert():
    student_list = []
    while True:
        id = input('请输入ID（如1001）:')
        if not id:# 每个变量都有自己的布尔值 如果是空id 就是false
            break
        name = input('请输入姓名')
        if not name:
            break

        try:
            englist = int(input('请输入英语成绩:'))
            python = int(input('请输入python成绩:'))
            java = int(input('请输入java成绩:'))
        except:
            print('输入无效， 不是整数类型，请重新输入')
            continue
        #将录入的学生信息保存到字典中
        student = {'id':id,'name':name,'english':englist,'python':python,'java':java}
        #将学生信息添加到列表中
        student_list.append(student)
        answer = input('是否继续添加？y/n\n')
        if answer=='y':
            continue
        else:
            break

    save(student_list)
    print('学生信息录入完毕')

def save(list):
    try:
        stu_txt = open(filename,'a',encoding='utf-8')
    except:
        stu_txt = open(filename,'w',encoding='utf-8')
    for item in list:
        stu_txt.write(str(item)+'\n') #这里的item是字典type 要转成str
    stu_txt.close()

def search():
    student_query=[]
    while True:
        id=''
        name=''
        if os.path.exists(filename):
            mode=input('按ID查找请输入1,按姓名查找请输入2: ')
            if mode=='1':
                id=input('请输入学生ID')
            elif mode=='2':
                name=input('请输入学生姓名:')
            else:
                print('您的输入有误，请重新输入')
                search()
            with open(filename,'r',encoding='utf-8') as rfile:
                student=rfile.readlines()
                for item in student:
                    d=dict(eval(item))
                    if id!='':
                        if d['id']==id:
                            student_query.append(d)
                    elif name!='':
                        if d['name']==name:
                            student_query.append(d)

            #显示查询结果
            show_student(student_query)
            #清空列表
            student_query.clear()
            answer=input('是否要继续查询？y/n\n')
            if answer=='y':
                continue
            else:
                break
        else:
            print('暂未保存学生信息')
            return

def show_student(lst):
    if len(lst)==0:
        print('没有查询到学生信息，无数据显示!!!')
        return
    #定义标题显示格式
    format_title='{:^6}\t{:^12}\t{:^8}\t{:^10}\t{:^10}\t{:^8}'
    print(format_title.format('ID','姓名','英语成绩','python成绩','java成绩','总成绩'))
    #定义内容的显示格式
    format_data='{:^6}\t{:^12}\t{:^8}\t{:^8}\t{:^8}\t{:^8}'
    for item in lst:
        print(format_data.format(item.get('id'),
                                 item.get('name'),
                                 item.get('english'),
                                 item.get('python'),
                                 item.get('java'),
                                 int(item.get('english'))+int(item.get('python'))+int(item.get('java'))
                                 ))

def delete():
    while True:
        student_id = input('请输入要删除的学生ID:')
        if student_id!='':
            if os.path.exists(filename):#因为上面只是判断有没有输入id，可能是第一次用这个系统就直接用删除功能，所以要判断是否有这个文件先
                with open(filename,'r',encoding='utf-8')as file:
                    student_old = file.readlines()
            else:
                student_old = []
            flag = False #标记是否删除
            if student_old:
                with open(filename,'w',encoding='utf-8')as wfile:
                    d = {}
                    for item in student_old:
                        d = dict(eval(item))#将字符串转成字典 eval函数 也可以字典转字符串 元组 列表同理
                        if d['id']!=student_id:
                            wfile.write(str(d)+'\n')#手动拼接上换行符号
                        else:
                            flag = True #这里是当id是匹配上的就不重新写进去 本质上是覆盖而不是删除 只要我不写进去就没有数据
                    if flag:
                        print(f'id为{student_id}的学生信息已经删除') #加f表示格式化字符串,加f后可以在字符串里面使用用花括号括起来的变量和表达式
                    else:
                        print(f'没有找到id为{student_id}的学生信息') #上面的for里面做的是拷贝学生信息，如果没有找到对应是的id flag就还是false
            else:
                print('无学生信息')
                break
            show() #删除之后重新显示所有学生信息
            answer = input('是否继续删除？y/n\n')
            if answer=='y':
                continue
            else:
                break

def modify():
    show()
    if os.path.exists(filename):
        with open(filename,'r',encoding='utf-8') as rfile:
            student_old=rfile.readlines()
    else:
        return
    student_id=input('请输入要修改的学员的ID: ')
    with open(filename,'w',encoding='utf-8') as wfile:
        for item in student_old:
            d=dict(eval(item))
            if d['id']==student_id:
                print('找到学生信息，可以修改他的相关信息了！')
                while True:
                    try:
                        d['name']=input('请输入姓名: ')
                        d['english']=input('请输入英语成绩: ')
                        d['python']=input('请输入Python成绩: ')
                        d['java']=input('请输入Java成绩: ')
                    except:
                        print('您的输入有误，请重新输入！！！')
                    else:
                        break
                wfile.write(str(d)+'\n')
                print('修改成功！！！')
            else:
                wfile.write(str(d)+'\n')
                print('没找到对应学生信息')
        answer=input('是否继续修改其他学生信息？y/n\n')
        rfile.close()
        wfile.close()#因为递归调用了 需要手动关闭 区别上面删除的程序（用while true做的）
        if answer=='y':
            modify()

def sort():
    show()
    if os.path.exists(filename):
        with open(filename,'r',encoding='utf-8') as rfile:
            student_list=rfile.readlines()
        student_new=[]
        for item in student_list:
            d=dict(eval(item))
            student_new.append(d)
    else:
        return
    asc_or_desc=input('请选择（0.升序 1.降序）:')
    if asc_or_desc=='0':
        asc_or_desc_bool=False
    elif asc_or_desc=='1':
        asc_or_desc_bool=True
    else:
        print('您的输入有误，请重新输入')
        sort()
    mode=input('请选择排序方式（1.按英语成绩排序 2.按python成绩排序 3.按java成绩排序 4.按总成绩排序）')
    if mode=='1':
        student_new.sort(key=lambda x :int(x['english']),reverse=asc_or_desc_bool)#这里的变量 x 是随便定义的
    elif mode=='2':
        student_new.sort(key=lambda x: int(x['python']), reverse=asc_or_desc_bool)
    elif mode == '3':
        student_new.sort(key=lambda x: int(x['java']), reverse=asc_or_desc_bool)
    elif mode == '4':
        student_new.sort(key=lambda x: int(x['java']+int(x['java']+int(x['english'])), reverse=asc_or_desc_bool))
    else:
        print('您的输入有误，请重新输入！！！')
        sort()
    show_student(student_new)

def total():
    if os.path.exists(filename):
        with open(filename,'r',encoding='utf-8') as rfile:
            students=rfile.readlines()
            if students:
                print(f'一共有{len(students)}名学生')
            else:
                print('还没有录入学生信息')
    else:
        print('暂未保存数据信息.....')

def show():
    student_lst=[]
    if os.path.exists(filename):
        with open(filename,'r',encoding='utf-8') as rfile:
            students=rfile.readlines()
            for item in students:
                student_lst.append(eval(item))
            if student_lst:
                show_student(student_lst)
    else:
        print('暂未保存过数据！！！！')

def menm():
    print('========================================================================')
    print('---------------------------------功能菜单-------------------------------')
    print('\t\t\t     1.录入学生信息')
    print('\t\t\t     2.查找学生信息')
    print('\t\t\t     3.删除学生信息')
    print('\t\t\t     4.修改学生信息')
    print('\t\t\t     5.排序')
    print('\t\t\t     6.统计学生总人数')
    print('\t\t\t     7.显示所有学生信息')
    print('\t\t\t     0.退出')
    print('-------------------------------------------------------------------------')

if __name__ == '__main__':
    main()
